{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogItem","dialogsItems","active","messages","message","DialogItem","props","react_default","a","createElement","dist","to","id","className","navData","isActive","s","src","img","name","Message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","map","d","Dialogs_DialogItem_DialogItem","key","messagesElements","m","Dialogs_Message_Message","newMessageBody","isAuth","Dialogs_AddMessageForm_AddMessageForm","values","sendMessage","redirect","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,WAAA,4BAAAC,aAAA,8BAAAC,OAAA,wBAAAC,SAAA,0BAAAC,QAAA,yHCcHC,EAXI,SAACC,GAChB,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAACC,EAAA,EAAO,CAACC,GAAI,YAAcL,EAAMM,GAAIC,UAAW,SAAAC,GAAO,OAAIA,EAAQC,SAAWC,IAAEd,OAASc,IAAEjB,UAASQ,EAAAC,EAAAC,cAAA,OAAKI,UAAWG,IAAEhB,WAAYiB,IAAKX,EAAMY,MAAOZ,EAAMa,SCI3JC,EATC,SAACd,GACb,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKI,UAAWG,IAAEZ,SAAUE,EAAMF,mDCFxCiB,EAAcC,YAAiB,IAetBC,cAAU,CAACC,KAAM,2BAAjBD,CAbQ,SAACjB,GACpB,OACIC,EAAAC,EAAAC,cAAA,QAAMgB,SAAUnB,EAAMoB,cAClBnB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkB,EAAA,EAAK,CAACC,UAAWC,IAAUC,SAAU,CAACC,IAAUV,GAAcW,YAAY,qBAAqBb,KAAK,oBAEzGZ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,cAAQ,YCoBTwB,EA3BC,SAAC3B,GAEb,IAAI4B,EAAQ5B,EAAM6B,YACdC,EAAkBF,EAAMnC,QAAQsC,IAAK,SAAAC,GAAC,OAAI/B,EAAAC,EAAAC,cAAC8B,EAAU,CAACpB,KAAMmB,EAAEnB,KAAMqB,IAAKF,EAAE1B,GAAIA,GAAI0B,EAAE1B,OACrF6B,EAAmBP,EAAM/B,SAASkC,IAAK,SAAAK,GAAC,OAAInC,EAAAC,EAAAC,cAACkC,EAAO,CAACvC,QAASsC,EAAEtC,QAASoC,IAAKE,EAAE9B,OAC/DsB,EAAMU,eAM3B,OAAKtC,EAAMuC,OAEPtC,EAAAC,EAAAC,cAAA,OAAKI,UAAWG,IAAEjB,SACdQ,EAAAC,EAAAC,cAAA,OAAKI,UAAWG,IAAEf,cACZmC,GAEN7B,EAAAC,EAAAC,cAAA,OAAKI,UAAWG,IAAEb,UACdI,EAAAC,EAAAC,cAAA,WAAOgC,IAGXlC,EAAAC,EAAAC,cAACqC,EAAc,CAACrB,SAdJ,SAACsB,GACjBzC,EAAM0C,YAAYD,EAAOH,oBAGHK,YAAS,mCCDxBC,sBACfC,YAbsB,SAACjB,GACnB,MAAO,CACHC,YAAaD,EAAMC,cAGF,SAACiB,GACtB,MAAO,CACHJ,YAAa,SAACJ,GACdQ,EAASC,YAAmBT,QAMpCU,IAFeJ,CAGbjB","file":"static/js/3.4e8c71b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1dbCM\",\"dialogItem\":\"Dialogs_dialogItem__1MMOD\",\"dialogsItems\":\"Dialogs_dialogsItems__3TDmt\",\"active\":\"Dialogs_active__2rKkb\",\"messages\":\"Dialogs_messages__3GtDs\",\"message\":\"Dialogs_message__11QXM\"};","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                {/* конкатинация строк */}\r\n                <NavLink to={'/dialogs/' + props.id} className={navData => navData.isActive ? s.active : s.dialogs}><img className={s.dialogItem} src={props.img}/>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={s.message}>{props.message}</div>           \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]} placeholder='Enter your message' name=\"newMessageBody\" />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\"\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> );\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return redirect(\"/login\");\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n \r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n        dispatch(sendMessageCreator(newMessageBody));\r\n    }\r\n}\r\n}\r\nexport default compose(\r\nconnect(mapStateToProps, mapDispatchToProps),\r\nwithAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}